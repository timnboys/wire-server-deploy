# PostgreSQL Configuration for Primary Node (Streaming Replication Optimized)
# {{ ansible_managed }}

# Basic Settings
data_directory = '/var/lib/postgresql/{{ postgresql_version }}/main'
hba_file = '/etc/postgresql/{{ postgresql_version }}/main/pg_hba.conf'
ident_file = '/etc/postgresql/{{ postgresql_version }}/main/pg_ident.conf'
external_pid_file = '/var/run/postgresql/{{ postgresql_version }}-main.pid'

# Connection Settings
listen_addresses = '*'
port = 5432
max_connections = 50                      # Conservative for 4GB RAM (each connection ~8MB)
superuser_reserved_connections = 3

# Memory Settings (optimized for 4GB RAM, 2 cores)
shared_buffers = 512MB                    # ~12.5% of total RAM (conservative for limited memory)
effective_cache_size = 2GB                # ~50% of total RAM for OS cache
work_mem = 4MB                            # Limited for constrained memory
maintenance_work_mem = 64MB               # Conservative for maintenance operations
wal_buffers = 8MB                         # Smaller WAL buffer for limited memory
max_worker_processes = 2                  # Match core count
max_parallel_workers = 2                  # Match core count
max_parallel_workers_per_gather = 1       # Conservative for 2 cores
shared_preload_libraries = 'pg_stat_statements'

# Write-Ahead Logging (WAL) - Optimized for 50GB disk constraint
wal_level = replica
max_wal_senders = 4                       # Limited for resource constraints
max_replication_slots = 4                 # Conservative number of slots
wal_keep_size = 2GB                       # 4% of disk space for WAL retention
wal_sender_timeout = 60s
max_slot_wal_keep_size = 3GB              # 6% of disk space maximum

# WAL Writing and Flushing (for minimal latency)
wal_sync_method = fdatasync
wal_writer_delay = 10ms                   # More frequent WAL writes
wal_writer_flush_after = 1MB
commit_delay = 0                          # No artificial delay
commit_siblings = 5

# Streaming Replication Settings - Asynchronous for resource efficiency
synchronous_standby_names = ''            # Async replication to reduce resource usage
synchronous_commit = off                  # Async commits for better performance with limited resources
wal_receiver_status_interval = 5s         # Less frequent updates to save resources
max_standby_streaming_delay = 60s         # Longer delays acceptable for resource constraints
max_standby_archive_delay = 60s
hot_standby_feedback = on                 # Prevent query conflicts on replicas

# Checkpoints (optimized for limited disk I/O)
checkpoint_completion_target = 0.8        # Slower completion for limited I/O
checkpoint_timeout = 10min                # Longer intervals to reduce I/O load  
max_wal_size = 1GB                        # 2% of disk space before checkpoint
min_wal_size = 256MB                      # Reasonable minimum
checkpoint_flush_after = 128kB            # Smaller flushes for limited I/O

# Background Writer
bgwriter_delay = 10ms                     # More frequent background writes
bgwriter_lru_maxpages = 1000
bgwriter_lru_multiplier = 10.0
bgwriter_flush_after = 512kB

# Query Planner
random_page_cost = 1.5                    # Assume SSD storage
effective_io_concurrency = 200            # SSD can handle more concurrent I/O
maintenance_io_concurrency = 10

# Logging (focused on replication monitoring)
log_destination = 'stderr'
logging_collector = on
log_directory = 'log'
log_filename = 'postgresql-%Y-%m-%d_%H%M%S.log'
log_rotation_age = 1d
log_rotation_size = 100MB
log_min_duration_statement = 1000
log_line_prefix = '%t [%p]: [%l-1] user=%u,db=%d,client=%h,app=%a '
log_statement = 'mod'
log_replication_commands = on             # Log replication commands
log_checkpoints = on                      # Monitor checkpoint performance
log_connections = on
log_disconnections = on
log_lock_waits = on                       # Monitor lock contention

# Statistics
track_activities = on
track_counts = on
track_io_timing = on                      # Monitor I/O performance
track_functions = all

# Autovacuum (tuned for resource constraints)
autovacuum = on
autovacuum_max_workers = 2                # Limited workers for 2 cores
autovacuum_naptime = 60s                  # Less frequent for resource conservation
autovacuum_vacuum_threshold = 50          
autovacuum_vacuum_scale_factor = 0.15     # Less aggressive than default
autovacuum_analyze_threshold = 50
autovacuum_analyze_scale_factor = 0.1
autovacuum_work_mem = 32MB                # Limited memory for autovacuum

# Locale and Formatting
datestyle = 'iso, mdy'
timezone = 'UTC'
lc_messages = 'en_US.UTF-8'
lc_monetary = 'en_US.UTF-8'
lc_numeric = 'en_US.UTF-8'
lc_time = 'en_US.UTF-8'
default_text_search_config = 'pg_catalog.english'
